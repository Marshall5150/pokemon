/* Variables start */
$navy: #003a70;
$white: #fff;

$pokemonTypeColours: (
  "bug": #a6b91a,
  "dragon": #6f35fc,
  "electric": #f7d02c,
  "fairy": #d685ad,
  "fighting": #c22e28,
  "fire": #ee8130,
  "flying": #a98ff3,
  "grass": #7ac74c,
  "ground": #e2bf65,
  "ghost": #735797,
  "ice": #96d9d6,
  "normal": #a8a77a,
  "poison": #a33ea1,
  "psychic": #f95587,
  "rock": #b6a136,
  "water": #6390f0,
);
/* Variables start */

/* General settings start */
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

h1 {
  font-family: "Fuzzy Bubbles", cursive;

  @media (min-width: 768px) {
    font-size: 45px;
  }
}
/* General settings start */

/* Components start */
.header {
  background-color: $navy;
  color: $white;
}

.content-container {
  padding: 30px;
  max-width: 1350px;
  margin: 0 auto;
}

.grid-items {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 30px;
  position: relative;
  margin: 15px 0 0 0;

  @media (min-width: 768px) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: 992px) {
    grid-template-columns: repeat(3, 1fr);
  }

  @media (min-width: 1440px) {
    grid-template-columns: repeat(4, 1fr);
  }
}

.card {
  position: relative;
  width: 100%;
  padding: 30px 20px;
  box-shadow: 5px 10px 15px rgba(0, 0, 0, 0.35);
  border-radius: 10px;

  // Loop to create modifier for each type colour
  @each $colour in $pokemonTypeColours {
    &--#{nth($colour, 1)} {
      border: 2px solid #{nth($colour, 2)};

      &:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 40%;
        background-color: #{nth($colour, 2)};
        z-index: -1;
        border-bottom-left-radius: 100%;
        border-bottom-right-radius: 100%;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
      }
    }
  }

  img {
    display: block;
    width: 180px;
    max-height: 200px;
    position: relative;
    margin: 20px auto;
  }

  .hp {
    width: 80px;
    background-color: $white;
    text-align: center;
    padding: 8px 0;
    border-radius: 30px;

    span {
      font-size: 12px;
    }
  }
}

.tags {
  display: flex;
  justify-content: space-around;
  margin: 20px 0 40px 0;
  list-style-type: none;

  &__item {
    border: 2px solid black;
    border-radius: 20px;
    padding: 5px 20px;

    // loop to create modifier for each pokemon type colour
    @each $colour in $pokemonTypeColours {
      &--#{nth($colour, 1)} {
        border-color: #{nth($colour, 2)};
      }
    }
  }
}

.loader {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 30px;

  &__pokeball {
    width: 60px;
    height: 60px;
    background-color: $white;
    border-radius: 50%;
    position: relative;
    overflow: hidden;
    border: 3px solid;
    animation: frames 0.8s linear 0s infinite;

    &:after {
      content: "";
      position: absolute;
      width: 60px;
      height: 30px;
      background-color: red;
      border-bottom: 4px solid;
      top: -4px;
    }

    &:before {
      content: "";
      position: absolute;
      background-color: $white;
      width: 10px;
      height: 10px;
      border: 4px solid;
      border-radius: 50%;
      bottom: 18px;
      right: 18px;
      z-index: 1;
    }
  }
}

.ngx-pagination {
  text-align: center;
  margin-top: 30px;
  font-size: 18px;
}

.form-group {
  margin-bottom: 15px;
}

.search-box {
  padding: 10px 15px;
  border: 2px solid lightgray;
  border-radius: 8px;
  max-width: 300px;
  width: 100%;
}
/* Components end */

/* Utilities/animations start */
.flex-space-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.font-weight-bold {
  font-weight: bold;
}

.text-align-center {
  text-align: center;
}

.screen-reader-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

@keyframes frames {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
/* Utilities/animations end */
